@page "/tazo"
@page "/tazo/{id:int}"
@using Models
@inject NavigationManager NavigationManager
<PageTitle>@title</PageTitle>
<h1>Tazos Catalog</h1>
<h3>New @title</h3>

@if (tazo is null)
{
    <p>Loading ...</p>
}
else
{
    <div class="row">
    <div class="col-sm-4">
        <EditForm Model="@tazo" OnValidSubmit="HandleSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="mb-3">
                <label for="name" class="form-label">Name: </label>
                <InputText id="name" @bind-Value="tazo.Name" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label for="material" class="form-label">Material: </label>
                <InputSelect id="material" @bind-Value="tazo.Material" class="form-select">
                    <option value="" selected>Select Material</option>
                    <option value="Plastic">Plastic</option>
                    <option value="Metallix">Metallix</option>
                    <option value="Gum">Gum</option>
                    <option value="Wood">Wood</option>
                </InputSelect>
            </div>
            <div class="mb-3">
                <label for="serialnumber" class="form-label">Serial Number: </label>
                <InputText id="serialnumber" @bind-Value="tazo.SerialNumber" class="form-control"></InputText>
            </div>
            <div class="mb-3">
                <label for="theme" class="form-label">Theme: </label>
                <InputSelect id="theme" @bind-Value="tazo.Theme" class="form-select">
                    <option value="" selected>Select Theme</option>
                    <option value="Dark">Dark</option>
                    <option value="Light">Light</option>
                    <option value="MuchaLucha">Mucha Lucha</option>
                </InputSelect>
            </div>
            <div class="mb-3">
                <label for="size" class="form-label">Size: </label>
                <InputSelect id="size" @bind-Value="tazo.Size" class="form-select">
                    <option value="" selected>Select a Size</option>
                    <option value="CH">Small</option>
                    <option value="M">Medium</option>
                    <option value="B">Big</option>
                </InputSelect>
            </div>
            <div class="mb-3">
                <label for="price" class="form-label">Price: </label>
                <InputNumber id="price" @bind-Value="tazo.Price" class="form-control"></InputNumber>
            </div>
            <div class="mb-3">
                <label for="releasedate" class="form-label">Release Date: </label>
                <InputDate id="price" @bind-Value="tazo.ReleaseDate" class="form-control"></InputDate>
            </div>
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
        </EditForm>
    </div>
</div>
}
@code {
    [Parameter]
    public int? Id { get; set; }
    private Tazo? tazo;
    private string title = string.Empty;
    private void HandleSubmit()
    {
        if (tazo!.Id == 0)
        {
            TazoClient.Add(tazo);
        }
        else
        {
            TazoClient.UpdateTazo(tazo);
        }
        NavigationManager.NavigateTo("/");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }


    protected override void OnParametersSet()
    {
        // If Id is not null it means UPDATE Tazo
        if (Id is not null)
        {
            Tazo foundTazo = TazoClient.GetTazo(Id.Value);
            tazo = new()
                {
                    Id = foundTazo.Id,
                    Name = foundTazo.Name,
                    Material = foundTazo.Material,
                    Theme = foundTazo.Theme,
                    Size = foundTazo.Size,
                    SerialNumber = foundTazo.SerialNumber,
                    Price = foundTazo.Price,
                    ReleaseDate = foundTazo.ReleaseDate
                };
            title = $"Edit{tazo.Name}";
        }
        // Otherwise it's a NEW TAZO
        else
        {
            title = "New Tazo";
            tazo = new()
                {
                    Name = string.Empty,
                    Material = string.Empty,
                    Theme = String.Empty,
                    Size = String.Empty,
                    SerialNumber = String.Empty,
                    Price = 0.0M,
                    ReleaseDate = DateTime.UtcNow
                };
        }
    }
}
